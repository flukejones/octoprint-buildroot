From 4b2a44c5f927820ceacb02107976a1d6bbaaa767 Mon Sep 17 00:00:00 2001
From: "Luke D. Jones" <luke@ljones.dev>
Date: Thu, 30 Sep 2021 16:27:48 +1300
Subject: [PATCH] JTE: Add TJ028 board DTS

---
 arch/arm/dts/Makefile                         |   1 +
 ...m32mp15-ddr3-microgea-1x4Gb-1066-binG.dtsi | 114 ++++
 arch/arm/dts/stm32mp157a-microgea-jte.dtsi    | 190 ++++++
 .../stm32mp157a-microgea-tj028-u-boot.dtsi    | 251 +++++++
 arch/arm/dts/stm32mp157a-microgea-tj028.dts   | 616 ++++++++++++++++++
 arch/arm/mach-stm32mp/Kconfig                 |  15 +
 board/jte/stm32mp1/Kconfig                    |  13 +
 board/jte/stm32mp1/Makefile                   |  15 +
 board/jte/stm32mp1/stm32mp1.c                 | 175 +++++
 board/st/common/stm32mp_mtdparts.c            |   2 +-
 10 files changed, 1391 insertions(+), 1 deletion(-)
 create mode 100644 arch/arm/dts/stm32mp15-ddr3-microgea-1x4Gb-1066-binG.dtsi
 create mode 100644 arch/arm/dts/stm32mp157a-microgea-jte.dtsi
 create mode 100644 arch/arm/dts/stm32mp157a-microgea-tj028-u-boot.dtsi
 create mode 100644 arch/arm/dts/stm32mp157a-microgea-tj028.dts
 create mode 100644 board/jte/stm32mp1/Kconfig
 create mode 100644 board/jte/stm32mp1/Makefile
 create mode 100644 board/jte/stm32mp1/stm32mp1.c

diff --git a/arch/arm/dts/Makefile b/arch/arm/dts/Makefile
index 167d68a902..6ffcc47542 100644
--- a/arch/arm/dts/Makefile
+++ b/arch/arm/dts/Makefile
@@ -951,6 +951,7 @@ dtb-$(CONFIG_ARCH_STI) += stih410-b2260.dtb
 dtb-$(CONFIG_STM32MP15x) += \
 	stm32mp157a-avenger96.dtb \
 	stm32mp157a-dk1.dtb \
+	stm32mp157a-microgea-tj028.dtb \
 	stm32mp157a-ed1.dtb \
 	stm32mp157a-ev1.dtb \
 	stm32mp157c-dk2.dtb \
diff --git a/arch/arm/dts/stm32mp15-ddr3-microgea-1x4Gb-1066-binG.dtsi b/arch/arm/dts/stm32mp15-ddr3-microgea-1x4Gb-1066-binG.dtsi
new file mode 100644
index 0000000000..90e0f88090
--- /dev/null
+++ b/arch/arm/dts/stm32mp15-ddr3-microgea-1x4Gb-1066-binG.dtsi
@@ -0,0 +1,114 @@
+/*
+ * File generated by STMicroelectronics STM32CubeMX DDR Tool for MPUs
+ * DDR type: DDR3 / DDR3L
+ * DDR width: 16bits
+ * DDR density: 4Gb
+ * System frequency: 528000Khz
+ * Relaxed Timing Mode: false
+ * Address mapping type: RBC
+ *
+ * Save Date: 2021.06.24, save Time: 19:33:39
+ */
+
+#define DDR_MEM_NAME	"DDR3-DDR3L 16bits 528000Khz"
+#define DDR_MEM_SPEED	528000
+#define DDR_MEM_SIZE	0x20000000
+
+#define DDR_MSTR 0x00041401
+#define DDR_MRCTRL0 0x00000010
+#define DDR_MRCTRL1 0x00000000
+#define DDR_DERATEEN 0x00000000
+#define DDR_DERATEINT 0x00800000
+#define DDR_PWRCTL 0x00000000
+#define DDR_PWRTMG 0x00400010
+#define DDR_HWLPCTL 0x00000000
+#define DDR_RFSHCTL0 0x00210000
+#define DDR_RFSHCTL3 0x00000000
+#define DDR_RFSHTMG 0x0081008B
+#define DDR_CRCPARCTL0 0x00000000
+#define DDR_DRAMTMG0 0x121B2414
+#define DDR_DRAMTMG1 0x000A041C
+#define DDR_DRAMTMG2 0x0608090F
+#define DDR_DRAMTMG3 0x0050400C
+#define DDR_DRAMTMG4 0x08040608
+#define DDR_DRAMTMG5 0x06060403
+#define DDR_DRAMTMG6 0x02020002
+#define DDR_DRAMTMG7 0x00000202
+#define DDR_DRAMTMG8 0x00001005
+#define DDR_DRAMTMG14 0x000000A0
+#define DDR_ZQCTL0 0xC2000040
+#define DDR_DFITMG0 0x02060105
+#define DDR_DFITMG1 0x00000202
+#define DDR_DFILPCFG0 0x07000000
+#define DDR_DFIUPD0 0xC0400003
+#define DDR_DFIUPD1 0x00000000
+#define DDR_DFIUPD2 0x00000000
+#define DDR_DFIPHYMSTR 0x00000000
+#define DDR_ODTCFG 0x06000600
+#define DDR_ODTMAP 0x00000001
+#define DDR_SCHED 0x00000C01
+#define DDR_SCHED1 0x00000000
+#define DDR_PERFHPR1 0x01000001
+#define DDR_PERFLPR1 0x08000200
+#define DDR_PERFWR1 0x08000400
+#define DDR_DBG0 0x00000000
+#define DDR_DBG1 0x00000000
+#define DDR_DBGCMD 0x00000000
+#define DDR_POISONCFG 0x00000000
+#define DDR_PCCFG 0x00000010
+#define DDR_PCFGR_0 0x00010000
+#define DDR_PCFGW_0 0x00000000
+#define DDR_PCFGQOS0_0 0x02100C03
+#define DDR_PCFGQOS1_0 0x00800100
+#define DDR_PCFGWQOS0_0 0x01100C03
+#define DDR_PCFGWQOS1_0 0x01000200
+#define DDR_PCFGR_1 0x00010000
+#define DDR_PCFGW_1 0x00000000
+#define DDR_PCFGQOS0_1 0x02100C03
+#define DDR_PCFGQOS1_1 0x00800040
+#define DDR_PCFGWQOS0_1 0x01100C03
+#define DDR_PCFGWQOS1_1 0x01000200
+#define DDR_ADDRMAP1 0x00070707
+#define DDR_ADDRMAP2 0x00000000
+#define DDR_ADDRMAP3 0x1F000000
+#define DDR_ADDRMAP4 0x00001F1F
+#define DDR_ADDRMAP5 0x06060606
+#define DDR_ADDRMAP6 0x0F060606
+#define DDR_ADDRMAP9 0x00000000
+#define DDR_ADDRMAP10 0x00000000
+#define DDR_ADDRMAP11 0x00000000
+#define DDR_PGCR 0x01442E02
+#define DDR_PTR0 0x0022AA5B
+#define DDR_PTR1 0x04841104
+#define DDR_PTR2 0x042DA068
+#define DDR_ACIOCR 0x10400812
+#define DDR_DXCCR 0x00000C40
+#define DDR_DSGCR 0xF200001F
+#define DDR_DCR 0x0000000B
+#define DDR_DTPR0 0x38D488D0
+#define DDR_DTPR1 0x098B00D8
+#define DDR_DTPR2 0x10023600
+#define DDR_MR0 0x00000840
+#define DDR_MR1 0x00000000
+#define DDR_MR2 0x00000208
+#define DDR_MR3 0x00000000
+#define DDR_ODTCR 0x00010000
+#define DDR_ZQ0CR1 0x00000038
+#define DDR_DX0GCR 0x0000CE81
+#define DDR_DX0DLLCR 0x40000000
+#define DDR_DX0DQTR 0x55555000
+#define DDR_DX0DQSTR 0x3DB02000
+#define DDR_DX1GCR 0x0000CE81
+#define DDR_DX1DLLCR 0x40000000
+#define DDR_DX1DQTR 0x055A0055
+#define DDR_DX1DQSTR 0x3DB02000
+#define DDR_DX2GCR 0x0000C881
+#define DDR_DX2DLLCR 0x40000000
+#define DDR_DX2DQTR 0xFFFFFFFF
+#define DDR_DX2DQSTR 0x3DB02000
+#define DDR_DX3GCR 0x0000C881
+#define DDR_DX3DLLCR 0x40000000
+#define DDR_DX3DQTR 0xFFFFFFFF
+#define DDR_DX3DQSTR 0x3DB02000
+
+#include "stm32mp15-ddr.dtsi"
diff --git a/arch/arm/dts/stm32mp157a-microgea-jte.dtsi b/arch/arm/dts/stm32mp157a-microgea-jte.dtsi
new file mode 100644
index 0000000000..40f0b2c762
--- /dev/null
+++ b/arch/arm/dts/stm32mp157a-microgea-jte.dtsi
@@ -0,0 +1,190 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (c) STMicroelectronics 2019 - All Rights Reserved
+ * Copyright (c) 2021 Jasic Technology Europe
+ */
+
+/ {
+	compatible = "engicam,microgea-stm32mp1", "st,stm32mp157";
+
+	memory@c0000000 {
+		device_type = "memory";
+		reg = <0xc0000000 0x20000000>;
+	};
+
+	reserved-memory {
+		#address-cells = <1>;
+		#size-cells = <1>;
+		ranges;
+
+		vdev0vring0: vdev0vring0@10040000 {
+			compatible = "shared-dma-pool";
+			reg = <0x10040000 0x1000>;
+			no-map;
+		};
+
+		vdev0vring1: vdev0vring1@10041000 {
+			compatible = "shared-dma-pool";
+			reg = <0x10041000 0x1000>;
+			no-map;
+		};
+
+		vdev0buffer: vdev0buffer@10044000 {
+			compatible = "shared-dma-pool";
+			reg = <0x10042000 0x4000>;
+			no-map;
+		};
+
+		mcuram: mcuram@30000000 {
+			compatible = "shared-dma-pool";
+			reg = <0x30000000 0x40000>;
+			no-map;
+		};
+
+		mcuram2: mcuram2@10000000 {
+			compatible = "shared-dma-pool";
+			reg = <0x10000000 0x40000>;
+			no-map;
+		};
+
+		retram: retram@38000000 {
+			compatible = "shared-dma-pool";
+			reg = <0x38000000 0x10000>;
+			no-map;
+		};
+
+		gpu_reserved: gpu@d4000000 {
+			reg = <0xd4000000 0x4000000>;
+			no-map;
+		};
+	};
+
+	vddcore: regulator-vddcore {
+		compatible = "regulator-fixed";
+		regulator-name = "vddcore";
+		regulator-min-microvolt = <1200000>;
+		regulator-max-microvolt = <1200000>;
+		regulator-always-on;
+		// vin-supply = <&vin>;
+	};
+
+	vdd: regulator-vdd {
+		compatible = "regulator-fixed";
+		regulator-name = "vdd";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		regulator-always-on;
+		// vin-supply = <&vin>;
+	};
+
+	vdda: regulator-vdda {
+		compatible = "regulator-fixed";
+		regulator-name = "vdda";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		regulator-always-on;
+	};
+
+	vdd_ddr: regulator-vdd_ddr {
+		compatible = "regulator-fixed";
+		regulator-name = "vdd_ddr";
+		regulator-min-microvolt = <1350000>;
+		regulator-max-microvolt = <1350000>;
+		regulator-always-on;
+	};
+
+	v3v3: regulator-v3v3 {
+		compatible = "regulator-fixed";
+		regulator-name = "v3v3";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		regulator-always-on;
+		regulator-over-current-protection;
+		regulator-initial-mode = <0>;
+	};
+
+	v2v8: regulator-v2v8 {
+		compatible = "regulator-fixed";
+		regulator-name = "v2v8";
+		regulator-min-microvolt = <2800000>;
+		regulator-max-microvolt = <2800000>;
+		regulator-always-on;
+		vin-supply = <&v3v3>;
+	};
+
+	v1v8: regulator-v1v8 {
+		compatible = "regulator-fixed";
+		regulator-name = "v1v8";
+		regulator-min-microvolt = <1800000>;
+		regulator-max-microvolt = <1800000>;
+		regulator-always-on;
+		vin-supply = <&v3v3>;
+	};
+};
+
+&gpiof {
+	status = "okay";
+	gpio-overvoltage {
+		gpio-hog;
+		line-name = "gpio-overvoltage";
+		gpios = <11 GPIO_ACTIVE_HIGH>;
+		output-low;
+	};
+};
+
+&dts {
+	status = "okay";
+};
+
+&fmc {
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&fmc_pins_a>; // exactly the same as fmc_pins_mx
+	pinctrl-1 = <&fmc_sleep_pins_a>;
+	status = "okay";
+
+	nand-controller@4,0 {
+		status = "okay";
+
+		nand@0 {
+			reg = <0>;
+			nand-on-flash-bbt;
+			#address-cells = <1>;
+			#size-cells = <1>;
+		};
+	};
+};
+
+&ipcc {
+	status = "okay";
+};
+
+&iwdg2 {
+	timeout-sec = <32>;
+	status = "okay";
+};
+
+&m4_rproc {
+	memory-region = <&retram>, <&mcuram>, <&mcuram2>, <&vdev0vring0>,
+			<&vdev0vring1>, <&vdev0buffer>;
+	mboxes = <&ipcc 0>, <&ipcc 1>, <&ipcc 2>;
+	mbox-names = "vq0", "vq1", "shutdown";
+	interrupt-parent = <&exti>;
+	interrupts = <68 1>;
+	status = "okay";
+};
+
+&rng1 {
+	status = "okay";
+};
+
+&rtc {
+	status = "okay";
+};
+
+&vrefbuf {
+	regulator-min-microvolt = <2500000>;
+	regulator-max-microvolt = <2500000>;
+	vdda-supply = <&vdd>;
+	status = "okay";
+};
+
diff --git a/arch/arm/dts/stm32mp157a-microgea-tj028-u-boot.dtsi b/arch/arm/dts/stm32mp157a-microgea-tj028-u-boot.dtsi
new file mode 100644
index 0000000000..78c19dc0cb
--- /dev/null
+++ b/arch/arm/dts/stm32mp157a-microgea-tj028-u-boot.dtsi
@@ -0,0 +1,251 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) STMicroelectronics 2019 - All Rights Reserved
+ * Copyright (c) 2021 Jasic Technology Europe
+ */
+
+
+#include <dt-bindings/clock/stm32mp1-clksrc.h>
+#include "stm32mp15-u-boot.dtsi"
+#include "stm32mp15-ddr3-microgea-1x4Gb-1066-binG.dtsi"
+
+/*
+Since U-Boot SPL is executed in the internal RAM that has a
+limited size, the device tree blob needs to be filtered in order
+to remove nodes that are useless in the FSBL context. This is
+done using the “fdtgrep” U-Boot tool, that removes all nodes
+that do not have “u-boot,dm-spl” or “u-boot,dm-pre-reloc”
+from the dtb file.
+*/
+
+/{
+	aliases {
+		ethernet0 = &ethernet0;
+        mmc0 = &sdmmc1;
+		mmc1 = &sdmmc3;
+		serial0 = &uart4;
+		serial1 = &uart8;
+		serial2 = &usart3;
+		serial3 = &uart7;
+		serial4 = &usart1;
+	};
+
+	config {
+		u-boot,mmc-env-partition = "fip";
+		// st,stm32prog-gpios = <&gpioa 14 GPIO_ACTIVE_LOW>;
+	};
+
+#ifdef CONFIG_STM32MP15x_STM32IMAGE
+	config {
+		u-boot,mmc-env-partition = "ssbl";
+	};
+
+	/* only needed for boot with TF-A, witout FIP support */
+	firmware {
+		optee {
+			compatible = "linaro,optee-tz";
+			method = "smc";
+		};
+	};
+
+	reserved-memory {
+		optee@de000000 {
+			reg = <0xde000000 0x02000000>;
+			no-map;
+		};
+	};
+#endif
+
+	chosen {
+		stdout-path = &uart4;
+	};
+}; /*root*/
+
+#ifndef CONFIG_TFABOOT
+&rcc {
+	u-boot,dm-pre-reloc;
+	st,csi-cal;
+	st,hsi-cal;
+	st,cal-sec = <60>;
+
+	st,clksrc = <
+		CLK_MPU_PLL1P
+		CLK_AXI_PLL2P
+		CLK_MCU_PLL3P
+		CLK_PLL12_HSE
+		CLK_PLL3_HSE
+		CLK_PLL4_HSE
+		CLK_RTC_LSE
+		CLK_MCO1_DISABLED
+		CLK_MCO2_DISABLED
+	>;
+
+	st,clkdiv = <
+		1 		/*MPU*/
+		1 		/*AXI*/
+		0 		/*MCU*/
+		1 		/*APB1*/
+		1 		/*APB2*/
+		1 		/*APB3*/
+		1 		/*APB4*/
+		1 		/*APB5*/
+		0 		/*RTC*/
+		0 		/*MCO1*/
+		0 		/*MCO2*/
+	>;
+
+	st,pkcs = <
+		CLK_CKPER_DISABLED
+		CLK_FMC_ACLK
+		CLK_ETH_PLL3Q
+		CLK_SDMMC12_HSI
+		CLK_STGEN_HSI
+		CLK_USBPHY_HSE
+		CLK_SPI2S1_DISABLED
+		CLK_SPI2S23_DISABLED
+		CLK_SPI45_DISABLED
+		CLK_SPI6_DISABLED
+		CLK_I2C46_CSI
+		CLK_SDMMC3_HSI
+		CLK_USBO_USBPHY
+		CLK_ADC_PLL3Q
+		CLK_CEC_DISABLED
+		CLK_I2C12_HSI
+		CLK_I2C35_CSI
+		CLK_UART1_HSI
+		CLK_UART24_HSE
+		CLK_UART35_PCLK1
+		CLK_UART6_PCLK2
+		CLK_UART78_PCLK1
+		CLK_SPDIF_DISABLED
+		CLK_FDCAN_HSE
+		CLK_SAI1_DISABLED
+		CLK_SAI2_PLL3Q
+		CLK_SAI3_DISABLED
+		CLK_SAI4_DISABLED
+		CLK_RNG1_CSI
+		CLK_LPTIM1_DISABLED
+		CLK_LPTIM23_DISABLED
+		CLK_LPTIM45_DISABLED
+	>;
+
+	pll2:st,pll@1 {
+		compatible = "st,stm32mp1-pll";
+		reg = <1>;
+		cfg = < 1 43 1 0 0 PQR(1,1,1) >;
+		u-boot,dm-pre-reloc;
+	};
+
+	pll3:st,pll@2 {
+		compatible = "st,stm32mp1-pll";
+		reg = <2>;
+		cfg = < 1 49 2 11 1 PQR(1,1,0) >;
+		u-boot,dm-pre-reloc;
+	};
+
+	pll4:st,pll@3 {
+		compatible = "st,stm32mp1-pll";
+		reg = <3>;
+		cfg = < 1 49 9 8 1 PQR(0,1,0) >;
+		u-boot,dm-pre-reloc;
+	};
+};
+#endif
+
+#ifndef CONFIG_TFABOOT
+&clk_lsi {
+	status = "disabled";
+};
+&clk_lse {
+	st,drive = < LSEDRV_MEDIUM_HIGH >;
+};
+#endif
+
+&vddcore {
+	u-boot,dm-pre-reloc;
+};
+
+&vdd {
+	u-boot,dm-pre-reloc;
+};
+
+&vdd_ddr {
+	u-boot,dm-pre-reloc;
+};
+
+&v3v3 {
+	u-boot,dm-pre-reloc;
+};
+
+&panel_backlight {
+	u-boot,dm-pre-reloc;
+};
+
+&lcd_3v3 {
+	u-boot,dm-pre-reloc;
+};
+
+&panel_rgb {
+	u-boot,dm-pre-reloc;
+};
+
+&pinctrl {
+	u-boot,dm-pre-reloc;
+};
+
+&fmc {
+	u-boot,dm-pre-reloc;
+};
+
+&fmc_pins_a {
+	u-boot,dm-pre-reloc;
+
+	pins1 {
+		u-boot,dm-pre-reloc;
+	};
+
+	pins2 {
+		u-boot,dm-pre-reloc;
+	};
+};
+
+&fmc_sleep_pins_a {
+	u-boot,dm-pre-reloc;
+
+	pins {
+		u-boot,dm-pre-reloc;
+	};
+};
+
+&sdmmc1 {
+	u-boot,dm-pre-reloc;
+};
+
+&sdmmc1_b4_pins_a {
+	u-boot,dm-pre-reloc;
+
+	pins1 {
+		u-boot,dm-pre-reloc;
+	};
+
+	pins2 {
+		u-boot,dm-pre-reloc;
+	};
+};
+
+&uart4 {
+	u-boot,dm-pre-reloc;
+};
+
+&uart4_pins_a {
+	u-boot,dm-pre-reloc;
+
+	pins1 {
+		u-boot,dm-pre-reloc;
+	};
+
+	pins2 {
+		u-boot,dm-pre-reloc;
+		bias-pull-up;
+	};
+};
diff --git a/arch/arm/dts/stm32mp157a-microgea-tj028.dts b/arch/arm/dts/stm32mp157a-microgea-tj028.dts
new file mode 100644
index 0000000000..d3fbeb29f9
--- /dev/null
+++ b/arch/arm/dts/stm32mp157a-microgea-tj028.dts
@@ -0,0 +1,616 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (c) STMicroelectronics 2019 - All Rights Reserved
+ * Copyright (c) 2021 Jasic Technology Europe
+ */
+
+/dts-v1/;
+#include "stm32mp157.dtsi"
+#include "stm32mp157a-microgea-jte.dtsi"
+#include "stm32mp15-pinctrl.dtsi"
+#include "stm32mp15xa.dtsi"
+#include "stm32mp15xxaa-pinctrl.dtsi"
+#include "stm32mp15-m4-srm.dtsi"
+#include "stm32mp15-m4-srm-pinctrl.dtsi"
+#include <dt-bindings/gpio/gpio.h>
+#include <dt-bindings/rtc/rtc-stm32.h>
+
+/ {
+	model = "JTE TJ028 Board";
+	compatible = "engicam,microgea-stm32mp1-tj028",
+		     "engicam,microgea-stm32mp1", "st,stm32mp157";
+
+	config {
+	 	st,reset-phy-gpios = <&gpioa 13 GPIO_ACTIVE_LOW>;
+	};
+
+	aliases {
+        ethernet0 = &ethernet0;
+        mmc0 = &sdmmc1;
+		mmc1 = &sdmmc3;
+		serial0 = &uart4;
+		serial1 = &uart8; // DITER, on ICL3232CBNZ, DITER_TX1 and DITER_RX1
+		//serial2 = &usart3; // Disabled RS-485 interface. Moved to the cortex M4 core
+		//serial3 = &uart7;
+		serial2 = &usart1; // ttySTM0-4
+	};
+
+	clk_ext_audio_codec: clock-codec {
+		compatible = "fixed-clock";
+		#clock-cells = <0>;
+		clock-frequency = <24000000>;
+	};
+
+	chosen {
+		stdout-path = "serial0:115200n8";
+	};
+
+	lcd_3v3: regulator-lcd-3v3 {
+		compatible = "regulator-fixed";
+		regulator-name = "lcd_3v3";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		gpio = <&gpiof 10 GPIO_ACTIVE_HIGH>; // is 0
+		enable-active-high;
+		regulator-always-on;
+	};
+
+	panel_backlight: panel-backlight {
+		compatible = "gpio-backlight";
+		gpios = <&gpiod 13 GPIO_ACTIVE_HIGH>; // is 0
+		status = "okay";
+		default-on;
+	};
+
+    panel_rgb: panel-rgb@0 {
+		compatible = "simple-panel";
+		backlight = <&panel_backlight>;
+		enable-gpios = <&gpiof 2 GPIO_ACTIVE_HIGH>;
+        power-supply = <&lcd_3v3>;
+		status = "okay";
+
+		display-timings {
+			timing@0 {
+				clock-frequency = <32260000>;
+				hactive = <800>;
+				vactive = <480>;
+				hfront-porch = <168>;
+				hback-porch = <64>;
+				hsync-len = <88>;
+				vfront-porch = <37>;
+				vback-porch = <2>;
+				vsync-len = <8>;
+				hsync-active = <0>;
+				vsync-active = <0>;
+				de-active = <0>;
+				pixelclk-active = <1>;
+			};
+		};
+
+		port {
+		    panel_in: endpoint {
+		        remote-endpoint = <&ltdc_ep0_out>;
+		    };
+		};
+	};
+
+	usb_phy_tuning: usb-phy-tuning {
+		st,hs-dc-level = <2>;
+		st,fs-rftime-tuning;
+		st,hs-rftime-reduction;
+		st,hs-current-trim = <15>;
+		st,hs-impedance-trim = <1>;
+		st,squelch-level = <3>;
+		st,hs-rx-offset = <2>;
+		st,no-lsfs-sc;
+	};
+
+	wifi_pwrseq: wifi_pwrseq {
+		compatible = "mmc-pwrseq-simple";
+		reset-gpios = <&gpiob 4 GPIO_ACTIVE_LOW>; /* Pin 37 on first GPIO module */
+		post-power-on-delay-ms = <20>;
+	};
+
+	sound {
+		compatible = "audio-graph-card";
+		label = "Evolve-HMI";
+		routing =
+			"Playback" , "MCLK",
+			"Capture" , "MCLK";
+		dais = <&sai2b_port &sai2a_port>;
+		status = "okay";
+	};
+};
+
+&i2c2 {
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&i2c2_pins_a>; // same pins as i2c2_pins_mx
+	pinctrl-1 = <&i2c2_sleep_pins_a>;
+	clock-frequency = <100000>;
+	/delete-property/dmas;
+	/delete-property/dma-names;
+	status = "okay";
+
+	polytouch: gt911@5d {
+		compatible = "goodix,gt911";
+		reg = <0x5d>;
+		irq-gpios = <&gpioe 3 GPIO_ACTIVE_HIGH>;
+		reset-gpios = <&gpiob 10 GPIO_ACTIVE_LOW>;
+		interrupt-parent = <&gpioe>;
+		interrupts = <3 0>;
+		touchscreen-inverted-y = <1>;
+	};
+};
+
+&sai2 {
+	//pinctrl-names = "default", "sleep";
+	//pinctrl-0 = <&sai2a_pins_mx>, <&sai2b_pins_mx>;
+	//pinctrl-1 = <&sai2a_sleep_pins_mx>, <&sai2b_sleep_pins_mx>;
+	status = "okay";
+	clocks = <&rcc SAI2>, <&rcc PLL3_Q>, <&rcc PLL4_Q>;
+	clock-names = "pclk", "x8k", "x11k";
+	frame-master;
+    bitclock-master;
+
+	sai2a: audio-controller@4400b004 {
+		status = "okay";
+		pinctrl-names = "default";
+		pinctrl-0 = <&sai2a_pins_mx>;
+		dma-names = "tx";
+		st,sync = <&sai2b 2>;
+		clocks = <&rcc SAI2_K>, <&sai2b>;
+		clock-names = "sai_ck", "MCLK";
+		sai2a_port: port@0 {
+			sai2a_endpoint: endpoint {
+				remote-endpoint = <&sgtl5000_rx_endpoint>;
+				format = "i2s";
+				mclk-fs = <256>;
+			};
+		};
+	};
+
+	sai2b: audio-controller@4400b024{
+		status = "okay";
+		pinctrl-names = "default";
+		pinctrl-0 = <&sai2b_pins_mx>;
+		#clock-cells = <0>;
+		dma-names = "tx";
+		clocks = <&rcc SAI2_K>;
+		clock-names = "sai_ck";
+		sai2b_port: port@0 {
+			sai2b_endpoint: endpoint {
+				remote-endpoint = <&sgtl5000_tx_endpoint>;
+				format = "i2s";
+				mclk-fs = <256>;
+			};
+		};
+	};
+};
+
+&i2c5 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&i2c5_pins_z_mx>;
+	pinctrl-1 = <&i2c5_sleep_pins_z_mx>;
+	status = "okay";
+
+	sgtl5000: codec@a {
+		compatible = "fsl,sgtl5000";
+		#sound-dai-cells = <0>;
+		reg = <0x0a>;
+		clocks = <&clk_ext_audio_codec>;
+		VDDA-supply = <&v3v3>;
+		//VDDIO-supply = <&vdd>;
+		status = "okay";
+
+		sgtl5000_port: port {
+			#address-cells = <1>;
+			#size-cells = <0>;
+
+			sgtl5000_tx_endpoint: endpoint@0 {
+				remote-endpoint = <&sai2a_endpoint>;
+			};
+
+			sgtl5000_rx_endpoint: endpoint@1 {
+				remote-endpoint = <&sai2b_endpoint>;
+			};
+		};
+	};
+};
+
+&ltdc {
+	pinctrl-names = "default";
+	pinctrl-0 = <&ltdc_pins>;
+	status = "okay";
+
+	port {
+		ltdc_ep0_out: endpoint@0 {
+			reg = <0>;
+			remote-endpoint = <&panel_in>;
+		};
+	};
+};
+
+&pinctrl_z {
+	i2c5_pins_z_mx: i2c5_mx-0 { /* New group */
+		pins {
+			pinmux = <STM32_PINMUX('Z', 4, AF4)>, /* I2C5_SCL */
+					 <STM32_PINMUX('Z', 5, AF4)>; /* I2C5_SDA */
+			bias-disable;
+			drive-open-drain;
+			slew-rate = <0>;
+		};
+	};
+
+	i2c5_sleep_pins_z_mx: i2c5_mx-sleep-0 {
+		pins {
+			pinmux = <STM32_PINMUX('Z', 4, ANALOG)>, /* I2C5_SCL */
+					 <STM32_PINMUX('Z', 5, ANALOG)>; /* I2C5_SDA */
+		};
+	};
+
+	usart1_pins_mx: usart1_mx-0 {
+        pins1 {
+            pinmux = <STM32_PINMUX('Z', 6, AF7)>; /* USART1_RX */
+            bias-disable;
+        };
+        pins2 {
+            pinmux = <STM32_PINMUX('Z', 7, AF7)>; /* USART1_TX */
+            bias-disable;
+            drive-push-pull;
+            slew-rate = <0>;
+        };
+    };
+};
+
+&pinctrl {
+	fdcan2_pins_mx: fdcan2_mx-0 {
+		pins1 {
+			pinmux = <STM32_PINMUX('B', 6, AF9)>; /* FDCAN2_RX */
+			bias-disable;
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('B', 5, AF9)>; /* FDCAN2_TX */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+	};
+
+	fdcan2_sleep_pins_mx: fdcan2_sleep_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('B', 6, ANALOG)>, /* FDCAN2_TX */
+					<STM32_PINMUX('B', 5, ANALOG)>; /* FDCAN2_RX */
+		};
+	};
+
+	ltdc_pins: ltdc {
+		pins {
+			pinmux = <STM32_PINMUX('G', 10, AF14)>,	/* LTDC_B2 */
+				 <STM32_PINMUX('H', 12, AF14)>,	/* LTDC_R6 */
+				 <STM32_PINMUX('H', 11, AF14)>,	/* LTDC_R5 */
+				 <STM32_PINMUX('D', 10, AF14)>,	/* LTDC_B3 */
+				 <STM32_PINMUX('D', 9, AF14)>,	/* LTDC_B0 */
+				 <STM32_PINMUX('E', 5, AF14)>,	/* LTDC_G0 */
+				 <STM32_PINMUX('E', 6, AF14)>,	/* LTDC_G1 */
+				 <STM32_PINMUX('E', 13, AF14)>,	/* LTDC_DE */
+				 <STM32_PINMUX('E', 15, AF14)>,	/* LTDC_R7 */
+				 <STM32_PINMUX('G', 7, AF14)>,	/* LTDC_CLK */
+				 <STM32_PINMUX('G', 12, AF14)>,	/* LTDC_B1 */
+				 <STM32_PINMUX('H', 2, AF14)>,	/* LTDC_R0 */
+				 <STM32_PINMUX('H', 3, AF14)>,	/* LTDC_R1 */
+				 <STM32_PINMUX('H', 8, AF14)>,	/* LTDC_R2 */
+				 <STM32_PINMUX('H', 9, AF14)>,	/* LTDC_R3 */
+				 <STM32_PINMUX('H', 10, AF14)>,	/* LTDC_R4 */
+				 <STM32_PINMUX('H', 13, AF14)>,	/* LTDC_G2 */
+				 <STM32_PINMUX('H', 14, AF14)>,	/* LTDC_G3 */
+				 <STM32_PINMUX('H', 15, AF14)>,	/* LTDC_G4 */
+				 <STM32_PINMUX('I', 0, AF14)>,	/* LTDC_G5 */
+				 <STM32_PINMUX('I', 1, AF14)>,	/* LTDC_G6 */
+				 <STM32_PINMUX('I', 2, AF14)>,	/* LTDC_G7 */
+				 <STM32_PINMUX('I', 4, AF14)>,	/* LTDC_B4 */
+				 <STM32_PINMUX('I', 5, AF14)>,	/* LTDC_B5 */
+				 <STM32_PINMUX('B', 8, AF14)>,	/* LTDC_B6 */
+				 <STM32_PINMUX('I', 7, AF14)>,	/* LTDC_B7 */
+				 <STM32_PINMUX('I', 9, AF14)>,	/* LTDC_VSYNC */
+				 <STM32_PINMUX('I', 10, AF14)>;	/* LTDC_HSYNC */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <3>;
+		};
+	};
+
+	// TODO: Move these sai2 pins to a common include module
+	sai2a_pins_mx: sai2a_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('I', 6, AF10)>; /* SAI2_SD_A */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+	};
+
+	sai2a_sleep_pins_mx: sai2a_sleep_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('I', 6, ANALOG)>; /* SAI2_SD_A */
+		};
+	};
+
+	sai2b_pins_mx: sai2b_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('C', 0, AF8)>, /* SAI2_FS_B */
+					 <STM32_PINMUX('E', 11, AF10)>, /* SAI2_SD_B */
+					 <STM32_PINMUX('E', 12, AF10)>, /* SAI2_SCK_B */
+					 <STM32_PINMUX('E', 14, AF10)>; /* SAI2_MCLK_B */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+	};
+
+	sai2b_sleep_pins_mx: sai2b_sleep_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('C', 0, ANALOG)>, /* SAI2_FS_B */
+					 <STM32_PINMUX('E', 11, ANALOG)>, /* SAI2_SD_B */
+					 <STM32_PINMUX('E', 12, ANALOG)>, /* SAI2_SCK_B */
+					 <STM32_PINMUX('E', 14, ANALOG)>; /* SAI2_MCLK_B */
+		};
+	};
+
+	usart3_pins_mx: usart3_mx-0 {
+        pins1 {
+            pinmux = <STM32_PINMUX('B', 12, AF8)>; /* USART3_RX */
+            bias-disable;
+        };
+        pins2 {
+            pinmux = <STM32_PINMUX('D', 8, AF7)>, /* USART3_TX */
+                     <STM32_PINMUX('G', 8, AF8)>; /* USART3_RTS */
+            bias-disable;
+            drive-push-pull;
+            slew-rate = <0>;
+        };
+    };
+
+	// Was GSM?
+	// uart7_pins_mx: uart7_mx-0 {
+    //     pins1 {
+    //         pinmux = <STM32_PINMUX('F', 6, AF7)>, /* USART7_RX */
+    //                  <STM32_PINMUX('F', 8, AF7)>; /* USART7_RTS */
+    //         bias-disable;
+    //     };
+    //     pins2 {
+    //         pinmux = <STM32_PINMUX('F', 7, AF7)>, /* USART7_TX */
+    //                  <STM32_PINMUX('F', 9, AF7)>; /* USART7_CTS */
+    //         bias-disable;
+    //         drive-push-pull;
+    //         slew-rate = <0>;
+    //     };
+    // };
+};
+
+&sdmmc1 {
+	disable-wp;
+	no-1-8-v;
+	broken-cd;
+	pinctrl-names = "default", "opendrain";
+	pinctrl-0 = <&sdmmc1_b4_pins_a>;
+	pinctrl-1 = <&sdmmc1_b4_od_pins_a>;
+	st,neg-edge;
+	bus-width = <4>;
+	max-frequency = <10000000>;
+	vmmc-supply = <&v3v3>;
+	status = "okay";
+};
+
+&sdmmc1_b4_pins_a {
+	pins1 {
+        slew-rate = <3>; // Slew rate change required for TJ028
+        bias-pull-up;    // Bias change required for TJ028
+	};
+	pins2 {
+        slew-rate = <3>; // Slew rate change required for TJ028
+        bias-pull-down;  // Bias change required for TJ028
+	};
+};
+
+&sdmmc2 {
+	status = "disabled";
+};
+
+&sdmmc3 {
+	pinctrl-names = "default", "opendrain";
+	pinctrl-0 = <&sdmmc3_b4_pins_a>;        // same as sdmmc3_pins_mx
+	pinctrl-1 = <&sdmmc3_b4_od_pins_a>;
+	max-frequency = <25000000>;
+	non-removable;
+	st,neg-edge;
+	bus-width = <4>;
+	vmmc-supply = <&v3v3>;
+	mmc-pwrseq = <&wifi_pwrseq>;
+	status = "okay";
+};
+
+&sdmmc3_b4_pins_a {
+	pins1 {
+		slew-rate = <0>; // Slew rate change required for TJ028
+	};
+	pins2 {
+		slew-rate = <0>; // Slew rate change required for TJ028
+	};
+};
+
+&gpu {
+    contiguous-area = <&gpu_reserved>;
+};
+
+&usart1 {
+    pinctrl-names = "default";
+    pinctrl-0 = <&usart1_pins_mx>;
+    status = "okay";
+};
+
+/* rs485, DITER Interface header */
+&usart3 {
+    pinctrl-names = "default";
+    pinctrl-0 = <&usart3_pins_mx>;
+    linux,rs485-enabled-at-boot-time;
+    status = "disabled";
+};
+
+/* Linux console */
+&uart4 {
+	pinctrl-names = "default", "sleep", "idle";
+	pinctrl-0 = <&uart4_pins_a>;
+	pinctrl-1 = <&uart4_sleep_pins_a>;
+	pinctrl-2 = <&uart4_idle_pins_a>;
+	status = "okay";
+};
+
+// /* Was GSM? */
+// &uart7 {
+//     pinctrl-names = "default";
+//     pinctrl-0 = <&uart7_pins_mx>;
+//     status = "okay";
+// };
+
+/* J31: RS323
+ * DITER, on ICL3232CBNZ, DITER_TX1 and DITER_RX1
+ */
+&uart8 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&uart8_pins_a>;
+	status = "okay";
+};
+
+&adc {
+	/* ANA0, ANA1 are dedicated pins and don't need pinctrl: only in6. */
+	vdd-supply = <&vdd>;
+	vdda-supply = <&vdda>;
+	vref-supply = <&vdda>;
+	status = "okay";
+	adc1: adc@0 {
+		st,adc-channels = <0 1>;
+		/* 16.5 ck_cycles sampling time */
+		st,min-sample-time-nsecs = <400>;
+		status = "okay";
+	};
+	jadc1: jadc@0 {
+		st,adc-channels = <0 1>;
+		/* 16.5 ck_cycles sampling time */
+		st,min-sample-time-nsecs = <400>;
+		status = "okay";
+	};
+	/* temperature sensor on adc2 */
+	adc2: adc@100 {
+		status = "okay";
+	};
+	adc_temp: temp {
+		status = "okay";
+	};
+};
+
+&dac {
+	status = "okay";
+};
+
+&cpu0 {
+	cpu-supply = <&vddcore>;
+};
+
+&cpu1 {
+	cpu-supply = <&vddcore>;
+};
+
+&dma1 {
+    status = "okay";
+};
+
+&dma2 {
+	status = "okay";
+};
+
+&dmamux1 {
+	dma-masters = <&dma1 &dma2>;
+	dma-channels = <16>;
+
+	status = "okay";
+};
+
+&mdma1{
+	status = "okay";
+};
+
+/* RTC clock provides 32KHz to wifi sdmmc3*/
+&rtc {
+	st,lsco = <RTC_OUT2_RMP>;
+	pinctrl-0 = <&rtc_out2_rmp_pins_a>;
+	pinctrl-names = "default";
+};
+
+&ethernet0 {
+	status = "okay";
+	pinctrl-0 = <&ethernet0_rmii_pins_a>;
+	pinctrl-names = "default";
+	phy-mode = "rmii";
+	max-speed = <100>;
+	phy-handle = <&phy0>;
+
+	st,eth_ref_clk_sel; /* In case of U-Boot */
+	phy-reset-gpios = <&gpioa 13 GPIO_ACTIVE_LOW>;
+	snps,reset-delays-us = <25000>, <200>, <0>;
+	snps,reset-active-low = <1>;
+
+	clock-names = "stmmaceth",
+                "mac-clk-tx",
+                "mac-clk-rx",
+                "ethstp",
+                "syscfg-clk", // extra clock
+                "eth-ck";
+
+    clocks = <&rcc ETHMAC>,
+            <&rcc ETHTX>,
+            <&rcc ETHRX>,
+            <&rcc ETHSTP>,
+            <&rcc SYSCFG>, // extra clock
+            <&rcc ETHCK_K>;
+
+	mdio0 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		compatible = "snps,dwmac-mdio";
+
+		phy0: ethernet-phy@0 {
+			reg = <0>;
+		};
+	};
+};
+
+&usbh_ehci {
+	status = "okay";
+};
+
+&usbh_ohci {
+	status = "okay";
+};
+
+&usbotg_hs {
+	pinctrl-names = "default";
+	pinctrl-0 = <&usbotg_hs_pins_a>;
+	status = "okay";
+};
+
+&usbphyc {
+	status = "okay";
+};
+
+&usbphyc_port0 {
+	status = "okay";
+};
+
+&usbphyc_port1 {
+	status = "okay";
+};
+
+&hash1 {
+	status = "okay";
+};
+
diff --git a/arch/arm/mach-stm32mp/Kconfig b/arch/arm/mach-stm32mp/Kconfig
index af0246d031..9ceb67189b 100644
--- a/arch/arm/mach-stm32mp/Kconfig
+++ b/arch/arm/mach-stm32mp/Kconfig
@@ -92,6 +92,20 @@ config TARGET_DH_STM32MP1_PDK2
 	help
 		Target the DH PDK2 development kit with STM32MP15x SoM.
 
+config TARGET_MICROGEA_TJ028
+	bool "JTE TJ028"
+	select STM32MP15x
+	imply BOOTCOUNT_LIMIT
+	imply BOOTSTAGE
+	imply CMD_BOOTCOUNT
+	imply CMD_BOOTSTAGE
+	imply CMD_CLS if CMD_BMP
+	imply DISABLE_CONSOLE
+	imply PRE_CONSOLE_BUFFER
+	imply SILENT_CONSOLE
+	help
+	  JTE TJ028 board using the MicroGEA STM32MP157A based Micro SOM.
+
 endchoice
 
 config SYS_TEXT_BASE
@@ -170,5 +184,6 @@ endif
 source "arch/arm/mach-stm32mp/cmd_stm32prog/Kconfig"
 source "board/st/stm32mp1/Kconfig"
 source "board/dhelectronics/dh_stm32mp1/Kconfig"
+source "board/jte/stm32mp1/Kconfig"
 
 endif
diff --git a/board/jte/stm32mp1/Kconfig b/board/jte/stm32mp1/Kconfig
new file mode 100644
index 0000000000..c3a21df415
--- /dev/null
+++ b/board/jte/stm32mp1/Kconfig
@@ -0,0 +1,13 @@
+if TARGET_MICROGEA_TJ028
+
+config SYS_BOARD
+	default "stm32mp1"
+
+config SYS_VENDOR
+	default "jte"
+
+config SYS_CONFIG_NAME
+	default "stm32mp1"
+
+source "board/st/common/Kconfig"
+endif
diff --git a/board/jte/stm32mp1/Makefile b/board/jte/stm32mp1/Makefile
new file mode 100644
index 0000000000..49014f5085
--- /dev/null
+++ b/board/jte/stm32mp1/Makefile
@@ -0,0 +1,15 @@
+# SPDX-License-Identifier: GPL-2.0+ OR BSD-3-Clause
+#
+# Copyright (C) 2018, STMicroelectronics - All Rights Reserved
+#
+
+ifdef CONFIG_SPL_BUILD
+obj-y += spl.o
+else
+obj-y += stm32mp1.o
+endif
+
+obj-$(CONFIG_SYS_MTDPARTS_RUNTIME) += ../../st/common/stm32mp_mtdparts.o
+obj-$(CONFIG_SET_DFU_ALT_INFO) += ../../st/common/stm32mp_dfu.o
+
+CFLAGS_stm32mp_mtdparts.o+= -DDEBUG -DCONFIG_LOGLEVEL=8
diff --git a/board/jte/stm32mp1/stm32mp1.c b/board/jte/stm32mp1/stm32mp1.c
new file mode 100644
index 0000000000..5e07060686
--- /dev/null
+++ b/board/jte/stm32mp1/stm32mp1.c
@@ -0,0 +1,175 @@
+// SPDX-License-Identifier: GPL-2.0+ OR BSD-3-Clause
+/*
+ * Copyright (C) 2018, STMicroelectronics - All Rights Reserved
+ * Copyright (C) 2020 Engicam S.r.l.
+ * Copyright (C) 2020 Amarula Solutions(India)
+ * Author: Jagan Teki <jagan@amarulasolutions.com>
+ */
+
+#include <bootm.h>
+#include <common.h>
+#include <log.h>
+#include <env.h>
+#include <env_internal.h>
+#include <fdt_support.h>
+#include <mtd_node.h>
+#include <remoteproc.h>
+#include <syscon.h>
+#include <asm/io.h>
+#include <asm/arch/sys_proto.h>
+#include <power/regulator.h>
+#include <jffs2/load_kernel.h>
+
+DECLARE_GLOBAL_DATA_PTR;
+
+int checkboard(void)
+{
+	char *mode;
+	const char *fdt_compat;
+	int fdt_compat_len;
+
+	if (IS_ENABLED(CONFIG_STM32MP15x_STM32IMAGE))
+		mode = "trusted - stm32image";
+	else if (IS_ENABLED(CONFIG_TFABOOT))
+		mode = "trusted";
+	else
+		mode = "basic";
+
+	printf("Board: stm32mp1 in %s mode", mode);
+	fdt_compat = fdt_getprop(gd->fdt_blob, 0, "compatible",
+				 &fdt_compat_len);
+	if (fdt_compat && fdt_compat_len)
+		printf(" (%s)", fdt_compat);
+	puts("\n");
+
+	return 0;
+}
+
+/* board dependent setup after realloc */
+int board_init(void)
+{
+	/* address of boot parameters */
+	gd->bd->bi_boot_params = STM32_DDR_BASE + 0x100;
+
+	if (IS_ENABLED(CONFIG_DM_REGULATOR))
+		regulators_enable_boot_on(_DEBUG);
+
+	return 0;
+}
+
+int board_late_init(void)
+{
+	return 0;
+}
+
+enum env_location env_get_location(enum env_operation op, int prio)
+{
+	u32 bootmode = get_bootmode();
+
+	if (prio)
+		return ENVL_UNKNOWN;
+
+	switch (bootmode & TAMP_BOOT_DEVICE_MASK) {
+	case BOOT_FLASH_SD:
+	case BOOT_FLASH_EMMC:
+		if (CONFIG_IS_ENABLED(ENV_IS_IN_MMC))
+			return ENVL_MMC;
+		else if (CONFIG_IS_ENABLED(ENV_IS_IN_EXT4))
+			return ENVL_EXT4;
+		else
+			return ENVL_NOWHERE;
+
+	case BOOT_FLASH_NAND:
+	case BOOT_FLASH_SPINAND:
+		if (CONFIG_IS_ENABLED(ENV_IS_IN_UBI))
+			return ENVL_UBI;
+		else
+			return ENVL_NOWHERE;
+
+	case BOOT_FLASH_NOR:
+		if (CONFIG_IS_ENABLED(ENV_IS_IN_SPI_FLASH))
+			return ENVL_SPI_FLASH;
+		else
+			return ENVL_NOWHERE;
+
+	default:
+		return ENVL_NOWHERE;
+	}
+}
+
+const char *env_ext4_get_intf(void)
+{
+	u32 bootmode = get_bootmode();
+
+	switch (bootmode & TAMP_BOOT_DEVICE_MASK) {
+	case BOOT_FLASH_SD:
+	case BOOT_FLASH_EMMC:
+		return "mmc";
+	default:
+		return "";
+	}
+}
+
+const char *env_ext4_get_dev_part(void)
+{
+	static char *const dev_part[] = {"0:auto", "1:auto", "2:auto"};
+	u32 bootmode = get_bootmode();
+
+	return dev_part[(bootmode & TAMP_BOOT_INSTANCE_MASK) - 1];
+}
+
+int mmc_get_env_dev(void)
+{
+	u32 bootmode;
+
+//	if (CONFIG_SYS_MMC_ENV_DEV >= 0)
+//		return CONFIG_SYS_MMC_ENV_DEV;
+
+	bootmode = get_bootmode();
+
+	/* use boot instance to select the correct mmc device identifier */
+	return (bootmode & TAMP_BOOT_INSTANCE_MASK) - 1;
+}
+
+#if defined(CONFIG_OF_BOARD_SETUP)
+int ft_board_setup(void *blob, struct bd_info *bd)
+{
+	static const struct node_info nodes[] = {
+		{ "st,stm32f469-qspi",		MTD_DEV_TYPE_NOR,  },
+		{ "st,stm32f469-qspi",		MTD_DEV_TYPE_SPINAND},
+		{ "st,stm32mp15-fmc2",		MTD_DEV_TYPE_NAND, },
+		{ "st,stm32mp1-fmc2-nfc",	MTD_DEV_TYPE_NAND, },
+	};
+	char *boot_device;
+
+	/* Check the boot-source and don't update MTD for serial or usb boot */
+	boot_device = env_get("boot_device");
+	if (!boot_device ||
+	    (strcmp(boot_device, "serial") && strcmp(boot_device, "usb")))
+		if (IS_ENABLED(CONFIG_FDT_FIXUP_PARTITIONS))
+			fdt_fixup_mtdparts(blob, nodes, ARRAY_SIZE(nodes));
+
+	return 0;
+}
+#endif
+
+static void board_copro_image_process(ulong fw_image, size_t fw_size)
+{
+	int ret, id = 0; /* Copro id fixed to 0 as only one coproc on mp1 */
+
+	if (!rproc_is_initialized())
+		if (rproc_init()) {
+			printf("Remote Processor %d initialization failed\n",
+			       id);
+			return;
+		}
+
+	ret = rproc_load(id, fw_image, fw_size);
+	printf("Load Remote Processor %d with data@addr=0x%08lx %u bytes:%s\n",
+	       id, fw_image, fw_size, ret ? " Failed!" : " Success!");
+
+	if (!ret)
+		rproc_start(id);
+}
+
+U_BOOT_FIT_LOADABLE_HANDLER(IH_TYPE_COPRO, board_copro_image_process);
diff --git a/board/st/common/stm32mp_mtdparts.c b/board/st/common/stm32mp_mtdparts.c
index baddadc3a5..769082aea1 100644
--- a/board/st/common/stm32mp_mtdparts.c
+++ b/board/st/common/stm32mp_mtdparts.c
@@ -86,7 +86,7 @@ void board_mtdparts_default(const char **mtdids, const char **mtdparts)
 	}
 
 	nor = false;
-	nand = false;
+	nand = true;
 	spinand = false;
 	serial = false;
 
-- 
2.34.1

